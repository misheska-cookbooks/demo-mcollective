<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd">

    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="localhost" useJmx="true" schedulePeriodForDestinationPurge="60000">
      <destinationPolicy>
        <policyMap>
          <policyEntries>
            <!-- MCollective generally expects producer flow control to be turned off. -->
            <policyEntry
              topic=">"
              producerFlowControl="false"
             />
             <!-- MCollective will generate many single-use replay queues,
                     which should be garbage-collected after five minutes to conserve memory. -->
             <policyEntry
               queue="*.reply.>"
               gcInactiveDestinations="true"
               inactiveTimoutBeforeGC="300000"
             />
            </policyEntries>
          </policyMap>
        </destinationPolicy>

        <managementContext>
            <managementContext createConnector="false"/>
        </managementContext>

        <plugins>
          <simpleAuthenticationPlugin>
            <users>
              <authenticationUser
                username="<%= node['demo-mcollective']['server']['username'] %>"
                password="<%= node['demo-mcollective']['server']['password'] %>"
                groups="servers,clients,everyone"
              />

              <authenticationUser
                username="<%= node['demo-mcollective']['server']['username'] %>"
                password="<%= node['demo-mcollective']['server']['password'] %>"
                groups="servers,everyone"
              />
            </users>
          </simpleAuthenticationPlugin>
          <authorizationPlugin>
            <map>
              <authorizationMap>
                <authorizationEntries>
                  <authorizationEntry queue=">"
                    write="admins" read="admins" admin="admins"
                  />
                  <authorizationEntry topic=">"
                    write="admins" read="admins" admin="admins" />
                  <authorizationEntry queue="mcollective.>" write="clients" read="clients" admin="clients"
                  />
                  <authorizationEntry topic="mcollective.>"
                    write="clients" read="clients" admin="clients" />
                  <authorizationEntry queue="mcollective.nodes" read="servers" admin="servers"
                  />
                  <authorizationEntry queue="mcollective.reply.>"
                    write="servers" admin="servers" />
                  <authorizationEntry topic="mcollective.*.agent" read="servers" admin="servers"
                  />
                  <authorizationEntry topic="mcollective.registration.agent"
                    write="servers" read="servers" admin="servers" />
                  <authorizationEntry topic="ActiveMQ.Advisory.>" read="everyone" write="everyone" admin="everyone"
                  />
                </authorizationEntries>
              </authorizationMap>
            </map>
          </authorizationPlugin>
        </plugins>

        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit="20 mb"/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="1 gb" name="foo"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="100 mb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <transportConnectors>
          <transportConnector name="stomp+nio" uri="stomp+nio://[::0]:61613"/>
        </transportConnectors>
    </broker>
</beans>
